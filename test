from flask import Flask, render_template
from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField
from wtforms.validators import DataRequired, Length, ValidationError

app = Flask(__name__)

app.config['SECRET_KEY'] = 'adosngfawegiundsifn323i4jo234i'

class UserCheck:
    def __init__(self, banned, message = None):
        self.banned = banned
        if not message:
            message = 'Please choose another username'
        self.message = message

    def __call__(self, form, field):
        if field.data.lower() in (word.lower() for word in self.banned):
            raise ValidationError(self.message)

class myform(FlaskForm):
    username = StringField('Username:', validators = [
        DataRequired(),
        UserCheck(message = "custom rejection message", banned = ['root', 'admin', 'sys']),
        Length(min = 2, max = 15)
        ])
    submit = SubmitField('Sign Up')

@app.route('/', methods = ['GET', 'Post'])
def postName():
    form = myform
    if form.validate_on_submit():
        username = form.username.data
        return render_template('home.html', form = form, username = username)
    else:
        return render_template('home.html', form = form, username = "")

if __name__ == '__main__':
    app.run(debug = True)